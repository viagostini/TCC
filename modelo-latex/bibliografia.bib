%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%% INSERINDO COMENTÁRIOS EM ARQUIVOS .bib %%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% 1. Como em outros arquivos LaTeX, comentários são iniciados por "%" e,
%    portanto, é preciso usar "\%" para imprimir o caractere "%". Esquecer
%    disso pode gerar erros difíceis de encontrar!
%
% 2. Não é possível inserir comentários dentro de uma entrada, apenas fora.
%
% 3. Não é possível incluir o caractere arroba em um comentário.
%
% 4. Se quiser desabilitar temporariamente um campo ("comentar" o campo),
%    troque seu nome para algum nome inválido, como "author-disable".
%    Se quiser fazer alguma observação permanente dentro de uma entrada,
%    você também pode usar algum nome de campo inválido, como "lembrete",
%    ou usar o campo "annotation", que normalmente é ignorado.
%
% 5. Se quiser desabilitar temporariamente uma entrada inteira ("comentar" a
%    entrada), não basta colocar "%" nas linhas correspondentes por causa do
%    caractere arroba; também é preciso remover a arroba.
%
% 6. Na verdade, as regras não são bem essas, mas segui-las é uma boa ideia:
%    https://tex.stackexchange.com/a/262282


% Esta entrada está comentada, ou seja, não tem efeito: se houvesse uma
% referência a ela no texto, a referência ficaria inválida. Observe que,
% para isso, o caractere arroba foi apagado!
%Book{JW82,
% author    = {Richard A. Johnson and Dean W. Wichern},
% title     = {Applied Multivariate Statistical Analysis},
% publisher = {Prentice-Hall},
% year      = {1983}
%}

% Esta entrada não está em uso em tese.tex, apenas em
% apresentacao.tex, mas isso não é um problema: você pode
% ter um banco de dados com todos os papers que são de seu
% interesse e, em um dado texto, citar apenas alguns deles.
@article{hopkins04:the,
author = {Brian Hopkins and Robin J. Wilson},
title = {The Truth about Königsberg},
journal = {The College Mathematics Journal},
volume = {35},
number = {3},
pages = {198-207},
year  = {2004},
publisher = {Taylor & Francis},
doi = {10.1080/07468342.2004.11922073},
URL = { 
        https://doi.org/10.1080/07468342.2004.11922073
    
},
eprint = { 
        https://doi.org/10.1080/07468342.2004.11922073
    
}
}

@misc{catch2,
    title        = {{Catch2}},
    url          = {https://github.com/catchorg/Catch2}
    }

@misc{menghani2019simple,
    title={A Simple Solution to the Level-Ancestor Problem},
    author={Gaurav Menghani and Dhruv Matani},
    year={2019},
    eprint={1903.01387},
    archivePrefix={arXiv},
    primaryClass={cs.DS}
}

@InProceedings{10.1007/3-540-61258-0_11,
author="Farach, Martin
and Muthukrishnan, S.",
editor="Hirschberg, Dan
and Myers, Gene",
title="Perfect hashing for strings: Formalization and algorithms",
booktitle="Combinatorial Pattern Matching",
year="1996",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="130--140",
abstract="Numbers and strings are two objects manipulated by most programs. Hashing has been well-studied for numbers and it has been effective in practice. In contrast, basic hashing issues for strings remain largely unexplored. In this paper, we identify and formulate the core hashing problem for strings that we call substring hashing. Our main technical results are highly efficient sequential/parallel (CRCW PRAM) Las Vegas type algorithms that determine a perfect hash function for substring hashing. For example, given a binary string of length n, one of our algorithms finds a perfect hash function in O(log n) time, O(n) work, and O(n) space; the hash value for any substring can then be computed in O(log log n) time using a single processor. Our approach relies on a novel use of the suffix tree of a string. In implementing our approach, we design optimal parallel algorithms for the problem of determining weighted ancestors on a edge-weighted tree that may be of independent interest.",
isbn="978-3-540-68390-2"
}

@inproceedings{Yuan:2009:EDS:1514894.1514908,
 author = {Yuan, Hao and Atallah, Mikhail J.},
 title = {Efficient Data Structures for Range-aggregate Queries on Trees},
 booktitle = {Proceedings of the 12th International Conference on Database Theory},
 series = {ICDT '09},
 year = {2009},
 isbn = {978-1-60558-423-2},
 location = {St. Petersburg, Russia},
 pages = {111--120},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1514894.1514908},
 doi = {10.1145/1514894.1514908},
 acmid = {1514908},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {query answering, range aggregation},
} 

@inproceedings{Sadakane:2006:SSD:1109557.1109693,
 author = {Sadakane, Kunihiko and Grossi, Roberto},
 title = {Squeezing Succinct Data Structures into Entropy Bounds},
 booktitle = {Proceedings of the Seventeenth Annual ACM-SIAM Symposium on Discrete Algorithm},
 series = {SODA '06},
 year = {2006},
 isbn = {0-89871-605-5},
 location = {Miami, Florida},
 pages = {1230--1239},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=1109557.1109693},
 acmid = {1109693},
 publisher = {Society for Industrial and Applied Mathematics},
 address = {Philadelphia, PA, USA},
} 

@article{Geary:2006:SOT:1198513.1198516,
 author = {Geary, Richard F. and Raman, Rajeev and Raman, Venkatesh},
 title = {Succinct Ordinal Trees with Level-ancestor Queries},
 journal = {ACM Trans. Algorithms},
 issue_date = {October 2006},
 volume = {2},
 number = {4},
 month = oct,
 year = {2006},
 issn = {1549-6325},
 pages = {510--534},
 numpages = {25},
 url = {http://doi.acm.org/10.1145/1198513.1198516},
 doi = {10.1145/1198513.1198516},
 acmid = {1198516},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Succinct data structures, XML document representation},
} 

@article{LAInPractice,
author = {Papamichail, Dimitris and Caputi, Thomas and Papamichail, Georgios},
year = {2014},
month = {02},
pages = {},
title = {The Level Ancestor Problem in Practice}
}

@inproceedings{Bender2002TheLA,
  title={The Level Ancestor Problem Simplified},
  author={Michael A. Bender and Martin Farach-Colton},
  booktitle={LATIN},
  year={2002}
}
